name: Generate iFlow Documentation

on:
  workflow_dispatch:
  repository_dispatch:
    types: [generate-iflow-doc]

jobs:
  generate_doc:
    runs-on: ubuntu-latest

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: üì¶ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz graphviz-dev pkg-config
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install urllib3 openai requests pygraphviz python-docx || true

      # Create consistent output folder
      - name: üïí Prepare output path
        id: prep
        run: |
          mkdir -p sample_doc
          echo "DOC_FILE=sample_doc/iFlow_Documentation_$(date +'%Y-%m-%d_%H-%M-%S').docx" >> $GITHUB_ENV

      - name: üß† Generate iFlow Technical Document
        run: python Dynamic_generate_iflow_spec_using_ai.py "$DOC_FILE"

      - name: üìÅ Verify generated files
        run: ls -l output_docs/*.docx || echo "‚ö†Ô∏è No DOCX file found"

      - name: ‚öôÔ∏è Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: üöÄ Commit and Push Generated Docs
        env:
          GITHUB_TOKEN: ${{ secrets.PYTHON_REPO_TOKEN }}
        run: |
          if ls output_docs/*.docx 1> /dev/null 2>&1; then
            echo "üìù Found DOCX files to commit..."
            git add output_docs/*.docx

            if git diff --cached --quiet; then
              echo "No new documents to commit."
            else
              git commit -m "Auto-generated iFlow documentation - $(date +'%Y-%m-%d %H:%M:%S')"
              git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main
              echo "‚úÖ Successfully pushed new documents to sample_doc/."
            fi
          else
            echo "‚ö†Ô∏è No DOCX files found to push."
          fi

name: Generate iFlow Documentation

on:
  # Trigger manually or via repository_dispatch
  workflow_dispatch:
  repository_dispatch:
    types: [generate-iflow-doc]

jobs:
  generate_doc:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: üß© Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Use token explicitly for push

      # 2Ô∏è‚É£ Set up Python
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3Ô∏è‚É£ Install dependencies
      - name: üì¶ Install dependencies
        run: |
          # Install system packages required by pygraphviz
          sudo apt-get update
          sudo apt-get install -y graphviz graphviz-dev pkg-config

          # Upgrade pip
          python -m pip install --upgrade pip

          # Install Python dependencies
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install urllib3 openai requests pygraphviz || true

      # 4Ô∏è‚É£ Run the document generation script
      - name: üß† Generate iFlow Technical Document
        run: python Dynamic_generate_iflow_spec_using_ai.py

      # 5Ô∏è‚É£ Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      # 6Ô∏è‚É£ Commit and push the generated doc using GITHUB_TOKEN
      - name: Commit and Push Generated Doc
        env:
          GITHUB_TOKEN: ${{ secrets.PYTHON_REPO_TOKEN }}
        run: |
          DOC_FILE="output.docx"
          if [ -f "$DOC_FILE" ]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            
            git add "$DOC_FILE"
            git commit -m "Add/Update generated iFlow documentation" || echo "No changes to commit"
            
            # Use token to push via HTTPS
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:main
          else
            echo "No doc file found to push."
          fi
